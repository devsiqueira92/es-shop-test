// <auto-generated />
using System;
using EsShop.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EsShop.Infrastructure.Migrations
{
    [DbContext(typeof(EsShopContext))]
    partial class EsShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EsShop.Domain.Entities.ColorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TXT_COLOR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DAT_CREATED_AT");

                    b.Property<string>("Hex")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("TXT_HEX");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("FLG_IS_DELETED");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DAT_UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("TB_COLOR", (string)null);
                });

            modelBuilder.Entity("EsShop.Domain.Entities.FabricEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DAT_CREATED_AT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("FLG_IS_DELETED");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TXT_TYPE");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DAT_UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("TB_TYPE", (string)null);
                });

            modelBuilder.Entity("EsShop.Domain.Entities.ShirtEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DAT_CREATED_AT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("FLG_IS_DELETED");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TXT_NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DAT_UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("TB_SHIRT", (string)null);
                });

            modelBuilder.Entity("EsShop.Domain.Entities.ShirtSpecificationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("ColorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("COD_COLOR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DAT_CREATED_AT");

                    b.Property<Guid>("FabricId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("COD_FABRIC");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("FLG_IS_DELETED");

                    b.Property<Guid>("ShirtId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("COD_SHIRT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DAT_UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("FabricId");

                    b.HasIndex("ShirtId");

                    b.ToTable("TB_SHIRT_SPECIFICATION", (string)null);
                });

            modelBuilder.Entity("EsShop.Domain.Entities.ShirtSpecificationImageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DAT_CREATED_AT");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("COD_IMAGE");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("FLG_IS_DELETED");

                    b.Property<Guid>("ShirtSpecificationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("COD_SHIRT_SPECIFICATION");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DAT_UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("ShirtSpecificationId");

                    b.ToTable("TB_SHIRT_SPECIFICATION_IMAGES", (string)null);
                });

            modelBuilder.Entity("EsShop.Domain.Entities.ShirtSpecificationEntity", b =>
                {
                    b.HasOne("EsShop.Domain.Entities.ColorEntity", "ColorEntity")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EsShop.Domain.Entities.FabricEntity", "FabricEntity")
                        .WithMany()
                        .HasForeignKey("FabricId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EsShop.Domain.Entities.ShirtEntity", "ShirtEntity")
                        .WithMany()
                        .HasForeignKey("ShirtId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ColorEntity");

                    b.Navigation("FabricEntity");

                    b.Navigation("ShirtEntity");
                });

            modelBuilder.Entity("EsShop.Domain.Entities.ShirtSpecificationImageEntity", b =>
                {
                    b.HasOne("EsShop.Domain.Entities.ShirtSpecificationEntity", "ShirtSpecification")
                        .WithMany()
                        .HasForeignKey("ShirtSpecificationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ShirtSpecification");
                });
#pragma warning restore 612, 618
        }
    }
}
